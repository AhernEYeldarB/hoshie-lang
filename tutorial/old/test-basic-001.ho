import {  } from "./common/simple_booleans";
import { num1 as numA, num2, numArr } from "./common/simple_numerics";
import { str1 as strA, str2 } from "./common/simple_strings";
import { subtract, someFunc2 } from "./common/simple_functions";
import { mol } from "./test/test";

little = numA - num2;
vLittle = numA / num2;
big = numA + num2;
vBig = numA * num2 + mol;
isFifty = numA == 50;
isSixty = numA == 60;
isGreater = numA > 60;
isPossible1 = isFifty && isSixty;
isPossible2 = isFifty || isSixty;

isTrue = "Smith" > "Jones";
isTrue2 = "Smith" >= "Smith";
isFalse = "Smith" < "Jones";
isFalse2 = "Smith" <= "Jones";
isVeryTrue = isTrue == isTrue;
isVeryFalse = isTrue != isTrue;

// assert(isTrue == isTrue2);
len = length(numArr);

longStr = strA + " and " + str2;
len2 = length(longStr);

utest(little + len, 15, "Test 001");
utest(true, !false, "Test 001");

"--- --- ---";
little;
len;
little + len;
"--- --- ---";

funcResult = subtract(7,5); //  TODO - Should not be error  ---
funcResult2 = someFunc2();  //  TODO - Should not be error  ---
subtract(7,5); //  TODO - Should not be error  ---
someFunc2();  //  TODO - Should not be error  ---

