//  Data Type  ---
Person = {
    string lname, 
    string fname,
    number age,
    boolean student
};

//  Person Array (data)  ---
someData = [{"Smith", "Alex", 21, true}, ...] as Person[];

//  Predicate Functions  ---
isAdult = (Person p) => p.age >= 18;            
isSmith = (Person p) => p.lname == "Smith";

//  Activities  ---
studentFilter = filter((Person p) => p.student);
calcAdultSmiths = pipe(filter(isAdult), filter(isSmith));
calcAdultStudents = pipe(filter(isAdult), studentFilter);

//  Sensors  ---
rowCount1 = count();
rowCount2 = count();

//  A pipe is also an activity  ---
calcAdultStudentSmiths = pipe(calcAdultSmiths, rowCount1, calcAdultStudents, rowCount2);

//  Actions (outputs to console)  ---
calcAdultSmiths(someData);
calcAdultStudentSmiths(someData);
rowCount1;
rowCount2;
